#!/bin/sh

set -o errexit
set -o nounset

printf -- '- checking environment... '
UPLOAD_URL="${1:-}"
if test -z "$UPLOAD_URL"; then
    echo '
Missing upload URL!

You should invoke this script in a GitHub Action workflow YML file with a syntax like this:
./.github/workflows/release "${{ github.event.release.upload_url }}" "${{ secrets.GH_PAT }}"
' >&2
    exit 1
    echo 'Missing upload URL!' >&2
    exit 1
fi
UPLOAD_URL="${UPLOAD_URL%{?*}"
if test "$UPLOAD_URL" = "${UPLOAD_URL##https://}"; then
    printf 'Invalid upload URL: %s\n' "$UPLOAD_URL" >&2
    exit 1
fi
GH_PAT="${2:-}"
if test -z "$GH_PAT"; then
    echo '
Missing GitHub Personal Access Token

In order to create it:
- go to https://github.com/settings/tokens/new
- select the "public_repo" scope (or "repo" for private repositories)
- create the personal access token and copy it
- go to the homepage of the GitHub repository
- go to Settings, the Secrets
- click the New Secret button
- in the Name field enter: GH_PAT
- in the Value field enter the personal access tokek copied before

Then you should invoke this script in a GitHub Action workflow YML file with a syntax like this:
./.github/workflows/release "${{ github.event.release.upload_url }}" "${{ secrets.GH_PAT }}"

' >&2
    exit 1
fi
echo 'passed.'

printf -- '- cleanup... '
rm -rf ./tmp
mkdir ./tmp
echo 'done.'

printf -- '- determining package handle... '
PACKAGE_HANDLE=$(cat controller.php | grep '$pkgHandle' | tr '"' "'" | cut -d"'" -f2)
if test -z "$PACKAGE_HANDLE"; then
    echo 'FAILED!' >&2
    exit 1
fi
printf 'done (%s).\n' "$PACKAGE_HANDLE"

printf -- '- exporting... '
git archive --format=tar --prefix="$PACKAGE_HANDLE/" HEAD | tar -x --directory=./tmp
echo 'done.'

printf -- '- downloading composerpkg... '
curl --silent --show-error --location --output ./tmp/composerpkg https://raw.githubusercontent.com/concrete5/cli/master/composerpkg
chmod +x ./tmp/composerpkg
echo 'done.'

printf -- '- patching composer.json... '
sed -i 's/"require-dev"/"require-dev-disabled"/' "./tmp/$PACKAGE_HANDLE/composer.json"
echo 'done.'

printf -- '- installing composer dependencies:\n'
./tmp/composerpkg install --no-interaction --working-dir="./tmp/$PACKAGE_HANDLE" --no-dev --no-suggest --prefer-dist --optimize-autoloader 2>&1 | sed 's/^/  /'

printf -- '- remove useless files... '
rm "./tmp/$PACKAGE_HANDLE/composer.json"
echo 'done.'

printf -- '- creating asset... '
cd tmp
zip -rqX "./$PACKAGE_HANDLE.zip" "./$PACKAGE_HANDLE"
cd - >/dev/null
echo 'done.'

printf -- '- uploading asset... '
curl \
    --silent --show-error --location \
    --user-agent "$PACKAGE_HANDLE concrete5 package deployer" \
    --header "Authorization: token $GH_PAT" \
    --header "Content-Type: application/zip" \
    --header 'Accept: application/vnd.github.v3+json' \
    --data-binary @"./tmp/$PACKAGE_HANDLE.zip" \
    "$UPLOAD_URL?name=$PACKAGE_HANDLE.zip" \
    >/dev/null
echo 'done.'
